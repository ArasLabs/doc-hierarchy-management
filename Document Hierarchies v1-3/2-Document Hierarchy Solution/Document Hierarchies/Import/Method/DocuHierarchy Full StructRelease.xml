<AML>
 <Item type="Method" id="F2DC5983B7EA40748650A6E9AE8718C1" action="add">
  <comments>called from Action</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[' this method must be called from an item action
' from ItemTypes: "Document Collection" or "Document Hierarchy Node"

'System.Diagnostics.Debugger.Break()

Dim thisItemType As String = Me.GetType()
Dim thisItemId As String = Me.GetID()
Dim isReleaseAsOwner As Boolean = (Me.getAttribute("releaseAsOwner","0") = "1")

Dim targetReleasedStatusName As String = ""
Dim inn As Innovator = Me.getInnovator()

' unsaved item
If(Me.isNew() Or Me.getAttribute("isTemp", "").Equals("1", StringComparison.OrdinalIgnoreCase)) Then
  Return inn.newError(CCO.ErrorLookup.Lookup("PE_CreateNewRevision_MustBeSaved", thisItemType))
End If

' item cannot be locked
If(Me.getLockStatus() > 0) Then
  Return inn.newError("The item is locked by you or someone else. Unlock first then try again.")
End If

' Item must be In the Released state
Dim isInPreliminaryState As Boolean = String.Equals(Me.getProperty("state",""), "Preliminary", StringComparison.Ordinal)
If (Not isInPreliminaryState) Then
  Return inn.newError("Item must be in 'Preliminay' state !")
End If

' Make sure the current user Is In the Owner identity
Dim ownedById As String = Me.getProperty("owned_by_id")
If (Not CCO.Permissions.IdentityListHasId(Aras.Server.Security.Permissions.Current.IdentitiesList, ownedById)) Then
  Return inn.newError(CCO.ErrorLookup.Lookup("PE_ManualRelease_YouMustBeAMember", Me.getPropertyAttribute("owned_by_id","keyed_name","Owner")))
End If

Dim suIdentityWasGranted As Boolean = False
Dim suIdentity As Aras.Server.Security.Identity = Nothing

Select Case thisItemType
 Case "Document Collection"
   targetReleasedStatusName = "Released"
   If Not isReleaseAsOwner Then
     ' do a promoteItem with role of identity "Aras PLM"
     suIdentity = Aras.Server.Security.Identity.GetByName("Aras PLM")
     suIdentityWasGranted = Aras.Server.Security.Permissions.GrantIdentity(suIdentity)
   End If
   
 Case "Document Hierarchy Node"
   targetReleasedStatusName = "Released"

   ' do a promoteItem with role of identity "Aras PLM"
   suIdentity = Aras.Server.Security.Identity.GetByName("Aras PLM")
   suIdentityWasGranted = Aras.Server.Security.Permissions.GrantIdentity(suIdentity)
End Select


Dim thisItem As Item = Me.newItem(thisItemType,"promoteItem")
thisItem.SetID(thisItemId)
thisItem.setProperty("state",targetReleasedStatusName)

thisItem = thisItem.apply()

If suIdentityWasGranted Then Aras.Server.Security.Permissions.RevokeIdentity(suIdentity)
If thisItem.isError() Then Return thisItem
'NOTE:
'on the transition of the Document Collection's life cycle to "Released" is
'another method that finds the top nodes of the document hierarchy and applies
'a promote to all nodes in the hierarchy, if promoted with role "Aras PLM"

Return thisItem]]></method_code>
  <method_type>VB</method_type>
  <name>DocuHierarchy StructRelease Down</name>
 </Item>
</AML>